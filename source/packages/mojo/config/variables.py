"""
.. module:: varnames
    :platform: Darwin, Linux, Unix, Windows
    :synopsis: Module that contains an enumeration of environment variable names
               that are used by the configuration code.

.. moduleauthor:: Myron Walker <myron.walker@gmail.com>
"""


import os

from mojo.collections.context import ContextPaths
from mojo.collections.wellknown import ContextSingleton

from mojo.config.defaultvalues import DefaultValues
from mojo.config.normalize import normalize_name_list, normalize_source_list
from mojo.config.overrides import MOJO_CONFIG_OVERRIDES


class MOJO_CONFIG_VARNAMES:

    MJR_NAME = "MJR_NAME"

    MJR_HOME_DIRECTORY = "MJR_HOME_DIRECTORY"

    MJR_CONFIG_DIRECTORY = "MJR_CONFIG_DIRECTORY"

    MJR_CONFIG_PASS_PHRASE = "MJR_CONFIG_PASS_PHRASE"

    MJR_CONFIG_CREDENTIAL_NAMES = "MJR_CONFIG_CREDENTIAL_NAMES"
    MJR_CONFIG_CREDENTIAL_URIS = "MJR_CONFIG_CREDENTIAL_URIS"
    MJR_CONFIG_CREDENTIAL_SOURCES = "MJR_CONFIG_CREDENTIAL_SOURCES"

    MJR_CONFIG_LANDSCAPE_NAMES = "MJR_CONFIG_LANDSCAPE_NAMES"
    MJR_CONFIG_LANDSCAPE_URIS = "MJR_CONFIG_LANDSCAPE_URIS"
    MJR_CONFIG_LANDSCAPE_SOURCES = "MJR_CONFIG_LANDSCAPE_SOURCES"

    MJR_CONFIG_TOPOLOGY_NAMES = "MJR_CONFIG_TOPOLOGY_NAMES"
    MJR_CONFIG_TOPOLOGY_URIS = "MJR_CONFIG_TOPOLOGY_URIS"
    MJR_CONFIG_TOPOLOGY_SOURCES = "MJR_CONFIG_TOPOLOGY_SOURCES"

    MJR_CONFIG_RUNTIME_NAMES = "MJR_CONFIG_RUNTIME_NAMES"
    MJR_CONFIG_RUNTIME_URIS = "MJR_CONFIG_RUNTIME_URIS"
    MJR_CONFIG_RUNTIME_SOURCES = "MJR_CONFIG_RUNTIME_SOURCES"


class MOJO_CONFIG_VARIABLES:

    MJR_NAME = MOJO_CONFIG_OVERRIDES.MJR_NAME

    MJR_HOME_DIRECTORY = os.path.expanduser("~/{}".format(MJR_NAME))

    MJR_CONFIG_USE_CREDENTIALS = MOJO_CONFIG_OVERRIDES.MJR_CONFIG_USE_CREDENTIALS
    MJR_CONFIG_USE_LANDSCAPE = MOJO_CONFIG_OVERRIDES.MJR_CONFIG_USE_LANDSCAPE
    MJR_CONFIG_USE_RUNTIME = MOJO_CONFIG_OVERRIDES.MJR_CONFIG_USE_RUNTIME
    MJR_CONFIG_USE_TOPOLOGY = MOJO_CONFIG_OVERRIDES.MJR_CONFIG_USE_TOPOLOGY

    MJR_CONFIG_DIRECTORY = os.path.join(MJR_HOME_DIRECTORY, "config")

    MJR_CONFIG_PASS_PHRASE = None

    MJR_CONFIG_CREDENTIAL_NAMES = None
    MJR_CONFIG_CREDENTIAL_URIS = None
    MJR_CONFIG_CREDENTIAL_SOURCES = None

    MJR_CONFIG_LANDSCAPE_NAMES = None
    MJR_CONFIG_LANDSCAPE_URIS = None
    MJR_CONFIG_LANDSCAPE_SOURCES = None

    MJR_CONFIG_TOPOLOGY_NAMES = None
    MJR_CONFIG_TOPOLOGY_URIS = None
    MJR_CONFIG_TOPOLOGY_SOURCES = None

    MJR_CONFIG_RUNTIME_NAMES = None
    MJR_CONFIG_RUNTIME_URIS = None
    MJR_CONFIG_RUNTIME_SOURCES = None


def resolve_configuration_variables():

    environ = os.environ

    ctx = ContextSingleton()

    MOJO_CONFIG_VARIABLES.MJR_HOME_DIRECTORY = MOJO_CONFIG_OVERRIDES.MJR_HOME_DIRECTORY
    if MOJO_CONFIG_VARNAMES.MJR_HOME_DIRECTORY in environ:
        MOJO_CONFIG_VARIABLES.MJR_HOME_DIRECTORY = environ[MOJO_CONFIG_VARNAMES.MJR_HOME_DIRECTORY]

    MOJO_CONFIG_VARIABLES.MJR_CONFIG_DIRECTORY = os.path.join(MOJO_CONFIG_VARIABLES.MJR_HOME_DIRECTORY, "config")
    if MOJO_CONFIG_VARNAMES.MJR_CONFIG_DIRECTORY in environ:
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_DIRECTORY = environ[MOJO_CONFIG_VARNAMES.MJR_CONFIG_DIRECTORY]

    MOJO_CONFIG_VARIABLES.MJR_CONFIG_CREDENTIAL_SOURCES = [os.path.join(MOJO_CONFIG_VARIABLES.MJR_CONFIG_DIRECTORY)]
    if MOJO_CONFIG_VARNAMES.MJR_CONFIG_CREDENTIAL_SOURCES in environ:
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_CREDENTIAL_SOURCES = normalize_source_list(
            environ[MOJO_CONFIG_VARNAMES.MJR_CONFIG_CREDENTIAL_SOURCES])

    MOJO_CONFIG_VARIABLES.MJR_CONFIG_LANDSCAPE_NAMES = ["default-landscape"]
    if MOJO_CONFIG_VARNAMES.MJR_CONFIG_LANDSCAPE_NAMES in environ:
        MOJO_CONFIG_OVERRIDES.MJR_CONFIG_USE_LANDSCAPE = True
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_LANDSCAPE_NAMES = normalize_name_list(
            environ[MOJO_CONFIG_VARNAMES.MJR_CONFIG_LANDSCAPE_NAMES])

    MOJO_CONFIG_VARIABLES.MJR_CONFIG_LANDSCAPE_SOURCES = [os.path.join(
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_DIRECTORY, "landscapes")]
    if MOJO_CONFIG_VARNAMES.MJR_CONFIG_LANDSCAPE_SOURCES in environ:
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_LANDSCAPE_SOURCES = normalize_source_list(
            environ[MOJO_CONFIG_VARNAMES.MJR_CONFIG_LANDSCAPE_SOURCES])

    MOJO_CONFIG_VARIABLES.MJR_CONFIG_RUNTIME_NAMES = ["default-runtime"]
    if MOJO_CONFIG_VARNAMES.MJR_CONFIG_RUNTIME_NAMES in environ:
        MOJO_CONFIG_OVERRIDES.MJR_CONFIG_USE_RUNTIME = True
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_RUNTIME_NAMES = normalize_name_list(
            environ[MOJO_CONFIG_VARNAMES.MJR_CONFIG_RUNTIME_NAMES])

    MOJO_CONFIG_VARIABLES.MJR_CONFIG_RUNTIME_SOURCES = [os.path.join(
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_DIRECTORY, "runtimes")]
    if MOJO_CONFIG_VARNAMES.MJR_CONFIG_RUNTIME_SOURCES in environ:
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_RUNTIME_SOURCES = normalize_source_list(
            environ[MOJO_CONFIG_VARNAMES.MJR_CONFIG_RUNTIME_SOURCES])

    MOJO_CONFIG_VARIABLES.MJR_CONFIG_TOPOLOGY_NAMES = ["default-topology"]
    if MOJO_CONFIG_VARNAMES.MJR_CONFIG_TOPOLOGY_NAMES in environ:
        MOJO_CONFIG_OVERRIDES.MJR_CONFIG_USE_TOPOLOGY = True
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_TOPOLOGY_NAMES = normalize_name_list(
            environ[MOJO_CONFIG_VARNAMES.MJR_CONFIG_TOPOLOGY_NAMES])

    MOJO_CONFIG_VARIABLES.MJR_CONFIG_TOPOLOGY_SOURCES = [os.path.join(
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_DIRECTORY, "topologies")]
    if MOJO_CONFIG_VARNAMES.MJR_CONFIG_TOPOLOGY_SOURCES in environ:
        MOJO_CONFIG_VARIABLES.MJR_CONFIG_TOPOLOGY_SOURCES = normalize_source_list(
            environ[MOJO_CONFIG_VARNAMES.MJR_CONFIG_TOPOLOGY_SOURCES])

    return
